name: Host Open-WebUI

on:
  schedule:
    - cron: '0 * * * *'  # Run every hour
  workflow_dispatch:  # Allow manual triggers

jobs:
  host-webui:
    runs-on: ubuntu-latest
    steps:
      - name: Install ngrok
        run: |
          curl -L https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz -o ngrok.tgz
          tar xvzf ngrok.tgz
          chmod +x ngrok

      - name: Set up ngrok auth
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: ./ngrok authtoken $NGROK_AUTH_TOKEN

      - name: Check and run Open-WebUI
        run: |
          # Check if container exists and is running
          if ! docker ps -a --format '{{.Names}}' | grep -q '^open-webui$'; then
            echo "Container doesn't exist, creating new one..."
            docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
          else
            echo "Container exists, checking status..."
            if ! docker ps --format '{{.Names}}' | grep -q '^open-webui$'; then
              echo "Container exists but not running, starting it..."
              docker start open-webui
            else
              echo "Container is already running"
            fi
          fi
          
          # Wait for container to be healthy
          echo "Waiting for container to be ready..."
          sleep 120

      - name: Start ngrok tunnel and get URL
        run: |
          # Start ngrok in the background with the skip browser warning header
          ./ngrok http 3000 --log=stdout --request-header ngrok-skip-browser-warning:true > ngrok.log 2>&1 &
          
          # Wait for ngrok to start and create the API
          sleep 15
          
          # Debug: Check if ngrok is running
          ps aux | grep ngrok
          
          # Debug: Check ngrok logs
          cat ngrok.log
          
          # Try multiple times to get the URL in case of slow startup
          for i in {1..10}; do
            echo "Attempt $i to get ngrok URL..."
            if NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url'); then
              if [ ! -z "$NGROK_URL" ] && [ "$NGROK_URL" != "null" ]; then
                echo "Successfully got ngrok URL"
                break
              fi
            fi
            echo "Failed to get URL, waiting 5 seconds..."
            sleep 5
          done
          
          # Debug: Show final URL value
          echo "Final NGROK_URL value: $NGROK_URL"
          
          # Store URL in environment file for GitHub Actions
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV
          
          # Set output for the step
          echo "ngrok_url=$NGROK_URL" >> $GITHUB_OUTPUT
          
          # Print URL with clear formatting
          echo "::notice ::Open-WebUI is accessible at: $NGROK_URL"
          echo "============================================="
          echo "üåê Access URL: $NGROK_URL"
          echo "============================================="

      - name: Keep alive
        run: |
          # Keep the workflow running for ~55 minutes (allowing for cleanup)
          # Print URL every 5 minutes to keep it visible in logs
          echo "Initial URL check: ${{ env.NGROK_URL }}"
          for i in {1..11}; do
            echo "Time elapsed: $((i*5)) minutes"
            echo "Current access URL: ${{ env.NGROK_URL }}"
            curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url' || echo "Failed to get current URL"
            sleep 300
          done